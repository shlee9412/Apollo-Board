{"version":3,"sources":["components/common/Header.tsx","gql/index.ts","components/Login/Contents.tsx","pages/Login.tsx","utils/index.ts","components/Main/Table.tsx","components/Main/Contents.tsx","pages/Main.tsx","components/Regist/Contents.tsx","pages/Regist.tsx","components/Write/Contents.tsx","pages/Write.tsx","components/Modify/Contents.tsx","pages/Modify.tsx","components/SelctedPost/Contents.tsx","pages/SelctedPost.tsx","App.tsx","index.tsx"],"names":["Header","useState","moveLogin","setMoveLogin","logout","useCallback","sessionStorage","clear","to","Navbar","bg","variant","Brand","href","Nav","className","getItem","Link","Button","onClick","LOGIN","gql","REGIST","MODIFY","LEAVE","POSTS","ONE_POST","WRITE","withRouter","history","useLazyQuery","getUserInfo","loading","data","_user_id","useRef","_password","login","inputUserId","current","value","inputPassword","variables","userId","password","Swal","fire","icon","title","text","didOpen","document","body","removeAttribute","didClose","focus","pressEnter","event","keyCode","useEffect","setItem","JSON","stringify","push","undefined","Form","Group","Label","Control","ref","onKeyUp","style","marginTop","type","width","margin","Login","convertDateString","dateString","yyyy","substring","mm","dd","HH","MM","columns","label","field","useQuery","postIdx","error","postsData","striped","bordered","scrollX","small","noBottomColumns","hover","rows","posts","map","d","i","regdate","clickEvent","Contents","padding","Main","userInfo","parse","_confirm_password","_name","_nickname","useMutation","sendRegistData","regist","confirmPassword","name","nickname","result","message","Regist","sendPostData","_title","_content","write","tmp","content","display","flex","flexDirection","marginBottom","as","resize","Write","showModal","setShowModal","_current_password","registResult","sendLeaveData","leaveResult","modify","leave","disabled","Modal","show","onHide","closeButton","Title","Body","Footer","Modify","sendPostIdx","justifyContent","alignItems","fontSize","fontWeight","SelctedPost","match","params","link","HttpLink","uri","client","ApolloClient","cache","InMemoryCache","App","exact","path","component","SelectedPost","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4e9fc244.chunk.js","sourcesContent":["import { useCallback, useState } from 'react';\nimport { Navbar, Nav, Button } from 'react-bootstrap';\nimport { Redirect, Link } from 'react-router-dom';\n\nconst Header = () => {\n  const [moveLogin, setMoveLogin] = useState<boolean>(false);\n\n  const logout = useCallback(() => {\n    sessionStorage.clear();\n    setMoveLogin(true);\n  }, []);\n\n  return (\n    <>\n      {moveLogin && <Redirect to='/login'/>}\n\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand href=\"/\">게시판</Navbar.Brand>\n        <Nav className=\"mr-auto\">\n          {sessionStorage.getItem('userInfo') && (\n            <>\n              <Nav.Link href=\"/write\">글쓰기</Nav.Link>\n              <Nav.Link href=\"/modify\">회원정보</Nav.Link>\n            </>\n          )}\n        </Nav>\n        {sessionStorage.getItem('userInfo') && (\n          <Button onClick={logout}>로그아웃</Button>\n        )}\n        {!sessionStorage.getItem('userInfo') && (\n          <Link to='/regist'>\n            <Button>회원가입</Button>\n          </Link>\n        )}\n      </Navbar>\n    </>\n  );\n};\n\nexport default Header;","import { gql } from 'apollo-boost';\n\nexport const LOGIN = gql`\nquery($userId: String, $password: String) {\n  login(\n    userId: $userId\n    password: $password\n  ) {\n    userId\n    password\n    name\n    nickname\n  }\n}\n`;\n\nexport const REGIST = gql`\nmutation(\n  $userId: String\n  $password: String\n  $name: String\n  $nickname: String\n) {\n  regist(\n    userId :$userId\n    password :$password\n    name :$name\n    nickname :$nickname\n  ) {\n    result\n    message\n  }\n}\n`;\n\nexport const MODIFY = gql`\nmutation(\n  $userId: String\n  $password: String\n  $name: String\n  $nickname: String\n) {\n  modify(\n    userId :$userId\n    password :$password\n    name :$name\n    nickname :$nickname\n  ) {\n    result\n    message\n  }\n}\n`;\n\nexport const LEAVE = gql`\nmutation(\n  $userId: String\n  $password: String\n) {\n  leave(\n    userId: $userId\n    password: $password\n  ) {\n    result\n    message\n  }\n}\n`;\n\nexport const POSTS = gql`\nquery (\n  $postIdx: Int\n) {\n\tposts(postIdx: $postIdx) {\n    nickname\n    postIdx\n    title\n    regdate\n  }\n}\n`;\n\nexport const ONE_POST = gql`\nquery (\n  $postIdx: Int\n) {\n\tposts(postIdx: $postIdx) {\n    nickname\n    title\n    content\n    regdate\n  }\n}\n`;\n\nexport const WRITE = gql`\nmutation(\n  $nickname: String\n  $title: String\n  $content: String\n) {\n  write(\n    nickname: $nickname\n    title: $title\n    content: $content\n  ) {\n    result\n    message\n  }\n}\n`;","import { useLazyQuery } from '@apollo/react-hooks';\nimport { KeyboardEvent, useCallback, useEffect, useRef } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { RouteComponentProps, withRouter } from 'react-router';\nimport Swal from 'sweetalert2';\nimport { LOGIN } from '../../gql';\n\nconst Contents = ({ history }: RouteComponentProps) => {\n  const [getUserInfo, { loading, data }] = useLazyQuery(LOGIN);\n\n  const _user_id = useRef<HTMLInputElement>(null);\n  const _password = useRef<HTMLInputElement>(null);\n\n  const login = useCallback(() => {\n    const inputUserId = _user_id.current?.value;\n    const inputPassword = _password.current?.value;\n\n    if (inputUserId === '') {\n      Swal.fire({\n        icon: 'error',\n        title: '로그인',\n        text: '아이디를 입력해주세요',\n        didOpen: () => document.body.removeAttribute('class'),\n        didClose: () => _user_id.current?.focus()\n      });\n      return;\n    }\n\n    if (inputPassword === '') {\n      Swal.fire({\n        icon: 'error',\n        title: '로그인',\n        text: '비밀번호를 입력해주세요',\n        didOpen: () => document.body.removeAttribute('class'),\n        didClose: () => _password.current?.focus()\n      });\n      return;\n    }\n\n    getUserInfo({\n      variables: {\n        userId: _user_id.current?.value,\n        password: _password.current?.value\n      }\n    });\n  }, [_user_id, _password, getUserInfo]);\n\n  const pressEnter = useCallback((event: KeyboardEvent<HTMLInputElement>) => {\n    if (event.keyCode === 13) {\n      login();\n    }\n  }, [login]);\n\n  useEffect(() => {\n    if (data) {\n      if (data.login) {\n        sessionStorage.setItem('userInfo', JSON.stringify(data.login));\n        history.push('/');\n        return;\n      }\n    }\n    \n    if (data !== undefined) {\n      Swal.fire({\n        icon: 'error',\n        title: '로그인',\n        text: '아이디와 비밀번호를 확인해주세요',\n        didOpen: () => document.body.removeAttribute('class'),\n        didClose: () => {\n          if (!_user_id.current || !_password.current) return;\n          _user_id.current.value = '';\n          _password.current.value = '';\n          _user_id.current?.focus();\n        }\n      });\n    }\n  }, [data, history]);\n\n  if (loading) return <></>;\n\n  return (\n    <div className='login-container'>\n      <div className='login-wrapper'>\n        <h2>로그인</h2>\n\n        <Form.Group>\n          <Form.Label>ID</Form.Label>\n          <Form.Control\n            ref={_user_id}\n            onKeyUp={pressEnter}\n          />\n\n          <Form.Label style={{ marginTop: '10px' }}>PASSWORD</Form.Label>\n          <Form.Control\n            ref={_password}\n            type='password'\n            onKeyUp={pressEnter}\n          />\n\n          <Button\n            style={{\n              width: '100%',\n              margin: '20px 0 0 0'\n            }}\n            onClick={login}\n          >\n            LOGIN\n          </Button>\n        </Form.Group>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(Contents);","import { useEffect } from 'react';\nimport Header from '../components/common/Header';\nimport Contents from '../components/Login/Contents';\n\nconst Login = () => {\n  useEffect(() => {\n    sessionStorage.clear();\n  }, []);\n\n  return (\n    <div className='page-container'>\n      <Header/>\n      <Contents/>\n    </div>\n  );\n};\n\nexport default Login;","export const convertDateString = (dateString: string) => {\n  const yyyy = dateString.substring(0, 4);\n  const mm = dateString.substring(4, 6);\n  const dd = dateString.substring(6, 8);\n  const HH = dateString.substring(8, 10);\n  const MM = dateString.substring(10, 12);\n  return `${yyyy}년 ${mm}월 ${dd}일 ${HH}시 ${MM}분`;\n};","import { useQuery } from '@apollo/react-hooks';\nimport { MDBDataTable } from 'mdbreact';\nimport { Redirect, RouteComponentProps, withRouter } from 'react-router';\nimport { POSTS } from '../../gql';\nimport { convertDateString } from '../../utils';\n\nconst columns = [\n  {\n    label: 'No',\n    field: 'postIdx',\n    width: 100\n  },\n  {\n    label: '제목',\n    field: 'title',\n    width: 200\n  },\n  {\n    label: '닉네임',\n    field: 'nickname',\n    width: 100\n  },\n  {\n    label: '등록날짜',\n    field: 'regdate',\n    width: 100\n  },\n]\n\nconst Table = ({ history }: RouteComponentProps) => {\n  const { loading, error, data: postsData } = useQuery(POSTS, {\n    variables: {\n      postIdx: null\n    }\n  });\n\n  if (loading) return <></>;\n  if (error) return <Redirect to='/'/>;\n\n  return (\n    <MDBDataTable\n      striped\n      bordered\n      scrollX\n      small\n      noBottomColumns\n      hover\n      data={{\n        columns,\n        rows: postsData.posts.map((d: Post, i: number) => {\n          return {\n            ...d,\n            postIdx: i + 1,\n            regdate: convertDateString(d.regdate),\n            clickEvent: () => history.push(`/post/${d.postIdx}`)\n          }\n        })\n      }}\n    />\n  );\n};\n\nexport default withRouter(Table);","import Table from './Table';\n\nconst Contents = () => {\n  return (\n    <div style={{ padding: '20px' }}>\n      <Table/>\n    </div>\n  );\n};\n\nexport default Contents;","import { useQuery } from '@apollo/react-hooks';\nimport { Redirect } from 'react-router';\nimport Header from '../components/common/Header';\nimport Contents from '../components/Main/Contents';\nimport { LOGIN } from '../gql';\n\nconst Main = () => {\n  const userInfo = sessionStorage.getItem('userInfo');\n\n  const { userId, password } = userInfo ? JSON.parse(userInfo) : { userId: null, password: null };\n  const { loading, error, data } = useQuery(LOGIN, {\n    variables: {\n      userId,\n      password\n    }\n  });\n\n  if (loading) return <></>;\n  if (error) return <Redirect to='/login'/>;\n  if (data && !data.login) return <Redirect to='/login'/>;\n\n  return (\n    <div className='page-container'>\n      <Header/>\n      <Contents/>\n    </div>\n  );\n};\n\nexport default Main;","import { useMutation } from '@apollo/react-hooks';\nimport { KeyboardEvent, useCallback, useEffect, useRef } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { RouteComponentProps, withRouter } from 'react-router';\nimport Swal from 'sweetalert2';\nimport { REGIST } from '../../gql';\n\nconst Contents = ({ history }: RouteComponentProps) => {\n  const _user_id = useRef<HTMLInputElement>(null);\n  const _password = useRef<HTMLInputElement>(null);\n  const _confirm_password = useRef<HTMLInputElement>(null);\n  const _name = useRef<HTMLInputElement>(null);\n  const _nickname = useRef<HTMLInputElement>(null);\n\n  const [sendRegistData, { data }] = useMutation(REGIST);\n\n  const regist = useCallback(() => {\n    const userId = _user_id.current?.value;\n    const password = _password.current?.value;\n    const confirmPassword = _confirm_password.current?.value;\n    const name = _name.current?.value;\n    const nickname = _nickname.current?.value;\n\n    if (userId === '') {\n      Swal.fire({\n        icon: 'error',\n        title: '회원가입',\n        text: '아이디를 입력해주세요',\n        didOpen: () => document.body.removeAttribute('class'),\n        didClose: () => _user_id.current?.focus()\n      });\n      return;\n    }\n\n    if (password === '') {\n      Swal.fire({\n        icon: 'error',\n        title: '회원가입',\n        text: '비밀번호를 입력해주세요',\n        didOpen: () => document.body.removeAttribute('class'),\n        didClose: () => _password.current?.focus()\n      });\n      return;\n    }\n\n    if (confirmPassword === '') {\n      Swal.fire({\n        icon: 'error',\n        title: '회원가입',\n        text: '비밀번호를 확인해주세요',\n        didOpen: () => document.body.removeAttribute('class'),\n        didClose: () => _confirm_password.current?.focus()\n      });\n      return;\n    }\n\n    if (password !== confirmPassword) {\n      Swal.fire({\n        icon: 'error',\n        title: '회원가입',\n        text: '같은 비밀번호를 입력해 주세요',\n        didOpen: () => document.body.removeAttribute('class'),\n        didClose: () => {\n          if (!_password.current || !_confirm_password.current) return;\n          _password.current.value = '';\n          _confirm_password.current.value = '';\n          _password.current.focus();\n        }\n      });\n      return;\n    }\n\n    if (name === '') {\n      Swal.fire({\n        icon: 'error',\n        title: '회원가입',\n        text: '이름을 입력해주세요',\n        didOpen: () => document.body.removeAttribute('class'),\n        didClose: () => _name.current?.focus()\n      });\n      return;\n    }\n\n    if (nickname === '') {\n      Swal.fire({\n        icon: 'error',\n        title: '회원가입',\n        text: '닉네임을 입력해주세요',\n        didOpen: () => document.body.removeAttribute('class'),\n        didClose: () => _nickname.current?.focus()\n      });\n      return;\n    }\n\n    sendRegistData({\n      variables: {\n        userId,\n        password,\n        name,\n        nickname\n      }\n    });\n  }, [_user_id, _password, _confirm_password, _name, _nickname, sendRegistData]);\n\n  const pressEnter = useCallback((event: KeyboardEvent<HTMLInputElement>) => {\n    if (event.keyCode === 13) {\n      regist();\n    }\n  }, [regist]);\n\n  useEffect(() => {\n    if (data !== undefined) {\n      Swal.fire({\n        icon: data?.regist.result ? 'success' : 'error',\n        title: '회원가입',\n        text: data?.regist.message,\n        didOpen: () => document.body.removeAttribute('class'),\n        didClose: () => {\n          if (data?.regist.result) {\n            history.push('/login');\n          }\n        }\n      });\n    }\n  }, [data, history]);\n\n  return (\n    <div className='login-container'>\n      <div className='login-wrapper'>\n        <h2>회원가입</h2>\n\n        <Form.Group>\n          <Form.Label>ID</Form.Label>\n          <Form.Control\n            ref={_user_id}\n            onKeyUp={pressEnter}\n          />\n\n          <Form.Label style={{ marginTop: '10px' }}>PASSWORD</Form.Label>\n          <Form.Control\n            ref={_password}\n            type='password'\n            onKeyUp={pressEnter}\n          />\n\n          <Form.Label style={{ marginTop: '10px' }}>CONFIRM PASSWORD</Form.Label>\n          <Form.Control\n            ref={_confirm_password}\n            type='password'\n            onKeyUp={pressEnter}\n          />\n\n          <Form.Label style={{ marginTop: '10px' }}>NAME</Form.Label>\n          <Form.Control\n            ref={_name}\n            onKeyUp={pressEnter}\n          />\n\n          <Form.Label style={{ marginTop: '10px' }}>NICKNAME</Form.Label>\n          <Form.Control\n            ref={_nickname}\n            onKeyUp={pressEnter}\n          />\n\n          <Button\n            style={{\n              width: '100%',\n              margin: '20px 0 0 0'\n            }}\n            onClick={regist}\n          >\n            REGIST\n          </Button>\n        </Form.Group>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(Contents);","import Header from '../components/common/Header';\nimport Contents from '../components/Regist/Contents';\n\nconst Regist = () => {\n  return (\n    <div className='page-container'>\n      <Header/>\n      <Contents/>\n    </div>\n  );\n};\n\nexport default Regist;","import { useMutation } from '@apollo/react-hooks';\nimport { useCallback, useEffect, useRef } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { RouteComponentProps, withRouter } from 'react-router';\nimport Swal from 'sweetalert2';\nimport { WRITE } from '../../gql';\n\nconst Contents = ({ history }: RouteComponentProps) => {\n  const [sendPostData, { data }] = useMutation(WRITE);\n\n  const _title = useRef<HTMLInputElement>(null);\n  const _content = useRef<HTMLTextAreaElement>(null);\n\n  const write = useCallback(() => {\n    const tmp = sessionStorage.getItem('userInfo');\n\n    if (!tmp) {\n      history.push('/');\n      return;\n    }\n\n    const { nickname } = JSON.parse(tmp);\n    const title = _title.current?.value;\n    const content = _content.current?.value;\n\n    if (title === '') {\n      Swal.fire({\n        icon: 'error',\n        title: '글쓰기',\n        text: '제목을 입력해주세요',\n        didOpen: () => document.body.removeAttribute('class'),\n        didClose: () => _title.current?.focus()\n      });\n      return;\n    }\n\n    if (content === '') {\n      Swal.fire({\n        icon: 'error',\n        title: '글쓰기',\n        text: '내용을 입력해주세요',\n        didOpen: () => document.body.removeAttribute('class'),\n        didClose: () => _content.current?.focus()\n      });\n      return;\n    }\n\n    sendPostData({\n      variables: {\n        nickname,\n        title,\n        content\n      }\n    });\n  }, [_title, _content, sendPostData, history]);\n\n  useEffect(() => {\n    if (data !== undefined) {\n      Swal.fire({\n        icon: data?.write.result ? 'success' : 'error',\n        title: '글쓰기',\n        text: data?.write.message,\n        didOpen: () => document.body.removeAttribute('class'),\n        didClose: () => {\n          if (data?.write.result) {\n            history.push('/');\n          }\n        }\n      });\n    }\n  }, [data, history]);\n\n  return (\n    <Form.Group\n      style={{\n        display: 'flex',\n        flex: 1,\n        flexDirection: 'column',\n        marginBottom: 0,\n        padding: '20px'\n      }}\n    >\n      <Form.Label>제목</Form.Label>\n      <Form.Control ref={_title}/>\n\n      <Form.Label style={{ marginTop: '20px' }}>내용</Form.Label>\n      <Form.Control\n        ref={_content}\n        as=\"textarea\"\n        style={{\n          flex: 1,\n          resize: 'none'\n        }}\n      />\n      \n      <Button\n        style={{ margin: '20px 0 0 0' }}\n        onClick={write}\n      >\n        등록\n      </Button>\n    </Form.Group>\n  );\n};\n\nexport default withRouter(Contents);","import { useQuery } from '@apollo/react-hooks';\nimport { Redirect } from 'react-router';\nimport Header from '../components/common/Header';\nimport Contents from '../components/Write/Contents';\nimport { LOGIN } from '../gql';\n\nconst Write = () => {\n  const userInfo = sessionStorage.getItem('userInfo');\n\n  const { userId, password } = userInfo ? JSON.parse(userInfo) : { userId: null, password: null };\n  const { loading, error, data } = useQuery(LOGIN, {\n    variables: {\n      userId,\n      password\n    }\n  });\n\n  if (loading) return <></>;\n  if (error) return <Redirect to='/login'/>;\n  if (data && !data.login) return <Redirect to='/login'/>;\n\n  return (\n    <div className='page-container'>\n      <Header/>\n      <Contents/>\n    </div>\n  );\n};\n\nexport default Write;","import { KeyboardEvent, useCallback, useEffect, useRef, useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport Swal from 'sweetalert2';\nimport { LEAVE, MODIFY } from '../../gql';\nimport { RouteComponentProps, withRouter } from 'react-router';\nimport { Button, Form, Modal } from 'react-bootstrap';\n\nconst Contents = ({ history }: RouteComponentProps) => {\n  const [showModal, setShowModal] = useState<boolean>(false);\n\n  const _user_id = useRef<HTMLInputElement>(null);\n  const _password = useRef<HTMLInputElement>(null);\n  const _confirm_password = useRef<HTMLInputElement>(null);\n  const _name = useRef<HTMLInputElement>(null);\n  const _nickname = useRef<HTMLInputElement>(null);\n  const _current_password = useRef<HTMLInputElement>(null);\n\n  const [sendRegistData, { data: registResult }] = useMutation(MODIFY);\n  const [sendLeaveData, { data: leaveResult }] = useMutation(LEAVE);\n\n  const modify = useCallback(() => {\n    const userId = _user_id.current?.value;\n    const password = _password.current?.value;\n    const confirmPassword = _confirm_password.current?.value;\n    const name = _name.current?.value;\n    const nickname = _nickname.current?.value;\n\n    if (userId === '') {\n      Swal.fire({\n        icon: 'error',\n        title: '회원정보 수정',\n        text: '아이디를 입력해주세요',\n        didOpen: () => document.body.removeAttribute('class'),\n        didClose: () => _user_id.current?.focus()\n      });\n      return;\n    }\n\n    if (password === '') {\n      Swal.fire({\n        icon: 'error',\n        title: '회원정보 수정',\n        text: '비밀번호를 입력해주세요',\n        didOpen: () => document.body.removeAttribute('class'),\n        didClose: () => _password.current?.focus()\n      });\n      return;\n    }\n\n    if (confirmPassword === '') {\n      Swal.fire({\n        icon: 'error',\n        title: '회원정보 수정',\n        text: '비밀번호를 확인해주세요',\n        didOpen: () => document.body.removeAttribute('class'),\n        didClose: () => _confirm_password.current?.focus()\n      });\n      return;\n    }\n\n    if (password !== confirmPassword) {\n      Swal.fire({\n        icon: 'error',\n        title: '회원정보 수정',\n        text: '같은 비밀번호를 입력해 주세요',\n        didOpen: () => document.body.removeAttribute('class'),\n        didClose: () => {\n          if (!_password.current || !_confirm_password.current) return;\n          _password.current.value = '';\n          _confirm_password.current.value = '';\n          _password.current.focus();\n        }\n      });\n      return;\n    }\n\n    if (name === '') {\n      Swal.fire({\n        icon: 'error',\n        title: '회원정보 수정',\n        text: '이름을 입력해주세요',\n        didOpen: () => document.body.removeAttribute('class'),\n        didClose: () => _name.current?.focus()\n      });\n      return;\n    }\n\n    if (nickname === '') {\n      Swal.fire({\n        icon: 'error',\n        title: '회원정보 수정',\n        text: '닉네임을 입력해주세요',\n        didOpen: () => document.body.removeAttribute('class'),\n        didClose: () => _nickname.current?.focus()\n      });\n      return;\n    }\n\n    sendRegistData({\n      variables: {\n        userId,\n        password,\n        name,\n        nickname\n      }\n    });\n  }, [_user_id, _password, _confirm_password, _name, _nickname, sendRegistData]);\n\n  const leave = useCallback(() => {\n    sendLeaveData({\n      variables: {\n        userId: _user_id.current?.value,\n        password: _current_password.current?.value\n      }\n    });\n  }, [_user_id, _current_password, sendLeaveData]);\n\n  const pressEnter = useCallback((event: KeyboardEvent<HTMLInputElement>) => {\n    if (event.keyCode === 13) {\n      modify();\n    }\n  }, [modify]);\n\n  useEffect(() => {\n    if (registResult !== undefined) {\n      Swal.fire({\n        icon: registResult?.modify.result ? 'success' : 'error',\n        title: '회원정보 수정',\n        text: registResult?.modify.message,\n        didOpen: () => {\n          if (registResult?.modify.result) {\n            if (\n              _user_id.current?.value &&\n              _password.current?.value &&\n              _name.current?.value &&\n              _nickname.current?.value\n            ) {\n              sessionStorage.setItem('userInfo', JSON.stringify({\n                userId: _user_id.current.value,\n                password: _password.current.value,\n                name: _name.current.value,\n                nickname: _nickname.current.value\n              }));\n            }\n          }\n          document.body.removeAttribute('class');\n        },\n        didClose: () => {\n          if (registResult?.modify.result) {\n            history.push('/');\n          }\n        }\n      });\n    }\n  }, [registResult, history]);\n\n  useEffect(() => {\n    if (leaveResult !== undefined) {\n      Swal.fire({\n        icon: leaveResult?.leave.result ? 'success' : 'error',\n        title: '회원탈퇴',\n        text: leaveResult?.leave.message,\n        didOpen: () => {\n          if (leaveResult?.leave.result) {\n            sessionStorage.clear();\n          }\n          document.body.removeAttribute('class')\n        },\n        didClose: () => history.push('/')\n      });\n    }\n  }, [leaveResult, history]);\n\n  useEffect(() => {\n    const tmp = sessionStorage.getItem('userInfo');\n    if (!tmp) {\n      history.push('/');\n      return;\n    }\n\n    const userInfo = JSON.parse(tmp);\n\n    if (\n      !_user_id.current ||\n      !_name.current ||\n      !_nickname.current\n    ) return;\n\n    _user_id.current.value = userInfo.userId;\n    _name.current.value = userInfo.name;\n    _nickname.current.value = userInfo.nickname;\n  }, [history]);\n\n  return (\n    <>\n      <div className='login-container'>\n        <div className='login-wrapper'>\n          <h2>회원정보 수정</h2>\n\n          <Form.Group>\n            <Form.Label>ID</Form.Label>\n            <Form.Control\n              ref={_user_id}\n              onKeyUp={pressEnter}\n              disabled\n            />\n\n            <Form.Label style={{ marginTop: '10px' }}>PASSWORD</Form.Label>\n            <Form.Control\n              ref={_password}\n              type='password'\n              onKeyUp={pressEnter}\n            />\n\n            <Form.Label style={{ marginTop: '10px' }}>CONFIRM PASSWORD</Form.Label>\n            <Form.Control\n              ref={_confirm_password}\n              type='password'\n              onKeyUp={pressEnter}\n            />\n\n            <Form.Label style={{ marginTop: '10px' }}>NAME</Form.Label>\n            <Form.Control\n              ref={_name}\n              onKeyUp={pressEnter}\n            />\n\n            <Form.Label style={{ marginTop: '10px' }}>NICKNAME</Form.Label>\n            <Form.Control\n              ref={_nickname}\n              onKeyUp={pressEnter}\n            />\n\n            <Button\n              style={{\n                display: 'block',\n                width: '100%',\n                margin: '20px 0'\n              }}\n              onClick={modify}\n            >\n              MODIFY\n            </Button>\n\n            <hr/>\n\n            <Button\n              variant='danger'\n              style={{\n                display: 'block',\n                width: '100%',\n                margin: '20px 0 0 0'\n              }}\n              onClick={() => setShowModal(true)}\n            >\n              LEAVE\n            </Button>\n          </Form.Group>\n        </div>\n      </div>\n\n      <Modal\n        show={showModal}\n        onHide={() => setShowModal(false)}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>회원탈퇴</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <h4>비밀번호</h4>\n          <Form.Control\n            ref={_current_password}\n            type='password'\n            //onKeyUp={pressEnter}\n          />\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>취소</Button>\n          <Button variant=\"danger\" onClick={leave}>탈퇴</Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default withRouter(Contents);","import { useQuery } from '@apollo/react-hooks';\nimport { Redirect } from 'react-router';\nimport Header from '../components/common/Header';\nimport Contents from '../components/Modify/Contents';\nimport { LOGIN } from '../gql';\n\nconst Modify = () => {\n  const userInfo = sessionStorage.getItem('userInfo');\n\n  const { userId, password } = userInfo ? JSON.parse(userInfo) : { userId: null, password: null };\n  const { loading, error, data } = useQuery(LOGIN, {\n    variables: {\n      userId,\n      password\n    }\n  });\n\n  if (loading) return <></>;\n  if (error) return <Redirect to='/login'/>;\n  if (data && !data.login) return <Redirect to='/login'/>;\n\n  return (\n    <div className='page-container'>\n      <Header/>\n      <Contents/>\n    </div>\n  );\n};\n\nexport default Modify;","import { useLazyQuery } from \"@apollo/react-hooks\";\nimport { useEffect } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { ONE_POST } from \"../../gql\";\nimport { convertDateString } from \"../../utils\";\n\ninterface PropsType {\n  postIdx: number\n}\n\nconst Contents = ({ postIdx }: PropsType) => {\n  const [sendPostIdx, { loading, data }] = useLazyQuery(ONE_POST);\n\n  useEffect(() => {\n    sendPostIdx({ variables: { postIdx: +postIdx } });\n  }, [postIdx, sendPostIdx]);\n\n  if (loading) return <></>;\n  if (!data) return <></>;\n\n  return (\n    <>\n      <Form.Group\n        style={{\n          display: 'flex',\n          flex: 1,\n          flexDirection: 'column',\n          marginBottom: 0,\n          padding: '20px'\n        }}\n      >\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          }}\n        >\n          <Form.Label>제목</Form.Label>\n          <Form.Label style={{ fontSize: '12px' }}>\n            <span style={{ fontWeight: 'bold' }}>{data.posts[0].nickname}</span> ({convertDateString(data.posts[0].regdate)})\n          </Form.Label>\n        </div>\n        <Form.Control disabled value={data.posts[0].title}/>\n\n        <Form.Label style={{ marginTop: '20px' }}>내용</Form.Label>\n        <Form.Control\n          as=\"textarea\"\n          disabled\n          value={data.posts[0].content}\n          style={{\n            flex: 1,\n            resize: 'none'\n          }}\n        />\n      </Form.Group>\n    </>\n  );\n};\n\nexport default Contents;","import { useQuery } from '@apollo/react-hooks';\nimport { Redirect, RouteComponentProps } from 'react-router';\nimport Header from '../components/common/Header';\nimport Contents from '../components/SelctedPost/Contents';\nimport { LOGIN } from '../gql';\n\nconst SelctedPost = ({ match }: RouteComponentProps<any>) => {\n  const userInfo = sessionStorage.getItem('userInfo');\n  \n  const { userId, password } = userInfo ? JSON.parse(userInfo) : { userId: null, password: null };\n  const { loading, error, data } = useQuery(LOGIN, {\n    variables: {\n      userId,\n      password\n    }\n  });\n\n  if (loading) return <></>;\n  if (error) return <Redirect to='/login'/>;\n  if (data && !data.login) return <Redirect to='/login'/>;\n\n  return (\n    <div className='page-container'>\n      <Header/>\n      <Contents postIdx={match.params.postIdx}/>\n    </div>\n  );\n};\n\nexport default SelctedPost;","import React from 'react';\nimport { HttpLink, ApolloClient, InMemoryCache } from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Main from './pages/Main';\nimport Regist from './pages/Regist';\nimport Write from './pages/Write';\nimport Modify from './pages/Modify';\nimport SelectedPost from './pages/SelctedPost';\n\nconst link = new HttpLink({ uri: process.env.NODE_ENV === 'production' ? '/gql' : 'http://localhost:4600/gql' });\nconst client = new ApolloClient({ link, cache: new InMemoryCache() });\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <BrowserRouter>\n        <Route exact path='/login' component={Login}/>\n        <Route exact path='/regist' component={Regist}/>\n        <Route exact path='/' component={Main}/>\n        <Route exact path='/write' component={Write}/>\n        <Route exact path='/modify' component={Modify}/>\n        <Route exact path='/post/:postIdx' component={SelectedPost}/>\n      </BrowserRouter>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport './styles/global.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}